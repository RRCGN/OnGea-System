{#
/**
 * @file
 * Default theme implementation to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *
 * @ingroup templates
 *
 * Define a custom macro that will render all menu trees.
 */
#}

{% macro menu_links(items, attributes, menu_level, classes) %}
  {% if items %}
  
    <ul{{ attributes.addClass(menu_level == 0 ? classes : 'dropdown-menu') }}>
    {% for item in items %}
      {%
        set item_classes = [
          item.is_expanded and item.below ? 'expanded',
          item.is_expanded and menu_level == 0 and item.below ? 'dropdown',
          item.in_active_trail ? 'active',
          'item-width'
        ]
      %}
      {% if menu_level == 0 and item.is_expanded and item.below %}
        <li {{ item.attributes.addClass(item_classes) }}>
        <a href="{{ item.url }}" class="dropdown-toggle" data-toggle="dropdown">{{ item.title }}</a>
        <span class="menu-icons">
            <i class="hidden menu-icon fas fa-chevron-up"></i>
            <i class="menu-icon fas fa-chevron-down"></i>
        </span>
      {% else %}
        <li {{ item.attributes.addClass(item_classes) }}>
        {{ link(item.title, item.url) }}
      {% endif %}
      {% if item.below %}
        {{ _self.menu_links(item.below, attributes.removeClass(classes), menu_level + 1, classes) }}
      {% endif %}
      </li>
    {% endfor %}
    </ul>

    <style>
      .main-menu .item-width{ width: {{ 90 / (items|length) }}%; }
    </style>
  {% endif %}
{% endmacro %}

{{ _self.menu_links(items, attributes, 0, classes ? classes : ['menu', 'menu--' ~ menu_name|clean_class, 'nav']) }}
