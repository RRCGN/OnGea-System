{"version":3,"sources":["../source/CountrySelectNative.js"],"names":["CountrySelectNative","onChange","event","props","value","target","undefined","name","options","disabled","tabIndex","className","SelectArrow","selectArrowComponent","selectedOption","option","divider","createElement","icon","map","label","propTypes","func","isRequired","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,mB;;;;;;;;;;;;;;8MAYpBC,Q,GAAW,UAACC,KAAD,EACX;AAAA,OACSD,QADT,GACsB,MAAKE,KAD3B,CACSF,QADT;;AAEC,OAAMG,QAAQF,MAAMG,MAAN,CAAaD,KAA3B;AACAH,YAASG,UAAU,IAAV,GAAiBE,SAAjB,GAA6BF,KAAtC;AACA,G;;;;;2BAGD;AAAA,gBAWG,KAAKD,KAXR;AAAA,OAGEI,IAHF,UAGEA,IAHF;AAAA,OAIEH,KAJF,UAIEA,KAJF;AAAA,OAKEI,OALF,UAKEA,OALF;AAAA,OAMEC,QANF,UAMEA,QANF;AAAA,OAOEC,QAPF,UAOEA,QAPF;AAAA,OAQEC,SARF,UAQEA,SARF;AAAA,OASyBC,WATzB,UASEC,oBATF;;;AAaC,OAAIC,uBAAJ;AACA,wBAAqBN,OAArB,kHAA8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,QAAnBO,MAAmB;;AAC7B,QAAI,CAACA,OAAOC,OAAR,IAAmBD,OAAOX,KAAP,KAAiBA,KAAxC,EAA+C;AAC9CU,sBAAiBC,MAAjB;AACA;AACD;;AAED,UACC;AAAA;AAAA,MAAK,WAAY,0BAAWJ,SAAX,EAAsB,2CAAtB,CAAjB;AACGG,sBAAkB,gBAAMG,aAAN,CAAoBH,eAAeI,IAAnC,EAA0C,EAAEd,YAAF,EAA1C,CADrB;AAGC;AAAA;AAAA;AACC,YAAOG,IADR;AAEC,aAAQH,SAAS,IAFlB;AAGC,gBAAW,KAAKH,QAHjB;AAIC,gBAAWQ,QAJZ;AAKC,gBAAWC,QALZ;AAMC,iBAAU,0CANX;AAOEF,aAAQW,GAAR,CAAY;AAAA,UAAGf,KAAH,SAAGA,KAAH;AAAA,UAAUgB,KAAV,SAAUA,KAAV;AAAA,UAAiBJ,OAAjB,SAAiBA,OAAjB;AAAA,aACZ;AAAA;AAAA;AACC,aAAMA,UAAU,GAAV,GAAgBZ,SAAS,IADhC;AAEC,eAAQY,UAAU,GAAV,GAAgBZ,SAAS,IAFlC;AAGC,kBAAWY,UAAU,IAAV,GAAiB,KAH7B;AAIC,mBAAYA,UAAU,kDAAV,GAA+DV,SAJ5E;AAKGc;AALH,OADY;AAAA,MAAZ;AAPF,KAHD;AAqBC,kCAAC,WAAD;AArBD,IADD;AAyBA;;;;4BA/DMC,S,GACP;AACCR,uBAAuB,oBAAUS,IAAV,CAAeC;AADvC,C,SAIOC,Y,GACP;AACCX,uBAAuB;AAAA,SAAM,uCAAK,WAAU,gDAAf,GAAN;AAAA;AADxB,C;kBARoBb,mB","file":"CountrySelectNative.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nexport default class CountrySelectNative extends Component\r\n{\r\n\tstatic propTypes =\r\n\t{\r\n\t\tselectArrowComponent : PropTypes.func.isRequired\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\tselectArrowComponent : () => <div className=\"react-phone-number-input__country-select-arrow\"/>\r\n\t}\r\n\r\n\tonChange = (event) =>\r\n\t{\r\n\t\tconst { onChange } = this.props\r\n\t\tconst value = event.target.value\r\n\t\tonChange(value === 'ZZ' ? undefined : value)\r\n\t}\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tname,\r\n\t\t\tvalue,\r\n\t\t\toptions,\r\n\t\t\tdisabled,\r\n\t\t\ttabIndex,\r\n\t\t\tclassName,\r\n\t\t\tselectArrowComponent : SelectArrow\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tlet selectedOption\r\n\t\tfor (const option of options) {\r\n\t\t\tif (!option.divider && option.value === value) {\r\n\t\t\t\tselectedOption = option\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={ classNames(className, 'react-phone-number-input__country--native') }>\r\n\t\t\t\t{ selectedOption && React.createElement(selectedOption.icon, ({ value })) }\r\n\r\n\t\t\t\t<select\r\n\t\t\t\t\tname={ name }\r\n\t\t\t\t\tvalue={ value || 'ZZ' }\r\n\t\t\t\t\tonChange={ this.onChange }\r\n\t\t\t\t\tdisabled={ disabled }\r\n\t\t\t\t\ttabIndex={ tabIndex }\r\n\t\t\t\t\tclassName=\"react-phone-number-input__country-select\">\r\n\t\t\t\t\t{options.map(({ value, label, divider }) => (\r\n\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\tkey={ divider ? '|' : value || 'ZZ' }\r\n\t\t\t\t\t\t\tvalue={ divider ? '|' : value || 'ZZ' }\r\n\t\t\t\t\t\t\tdisabled={ divider ? true : false }\r\n\t\t\t\t\t\t\tclassName={ divider ? 'react-phone-number-input__country-select-divider' : undefined }>\r\n\t\t\t\t\t\t\t{ label }\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</select>\r\n\r\n\t\t\t\t<SelectArrow/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}"]}