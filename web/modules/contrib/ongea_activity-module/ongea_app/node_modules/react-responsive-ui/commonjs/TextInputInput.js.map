{"version":3,"sources":["../source/TextInputInput.js"],"names":["PureComponent","Component","TextInput","state","autoresize","event","measurements","element","target","input","style","height","scrollHeight","extra_height","Math","max","initial_height","ceil","onWindowResize","measure","autoresize_measure","onChange","value","undefined","props","onKeyDown","defaultPrevented","storeInputNode","node","inputRef","focus","multiline","window","addEventListener","removeEventListener","setState","name","inputComponent","disabled","type","indicateInvalid","error","className","containerRef","floatingLabel","required","children","rest","inputStyle","resize","properties","ref","autoFocus","createElement","propTypes","string","bool","isRequired","oneOfType","func","defaultProps","getComputedStyle","parseInt","borderTopWidth","borderBottomWidth","non_rounded_initial_height","getBoundingClientRect"],"mappings":"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","file":"TextInputInput.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\nimport throttle from 'lodash/throttle'\r\n\r\nimport { getModularGridUnit } from './utility/grid'\r\nimport { submitFormOnCtrlEnter } from './utility/dom'\r\n\r\n// `PureComponent` is only available in React >= 15.3.0.\r\nconst PureComponent = React.PureComponent || React.Component\r\n\r\nexport default class TextInput extends PureComponent\r\n{\r\n\tstate = {}\r\n\r\n\tstatic propTypes =\r\n\t{\r\n\t\t// `<input type/>` attribute.\r\n\t\ttype             : PropTypes.string,\r\n\r\n\t\t// Whether `<textarea/>` should autoresize itself\r\n\t\t// (is `true` by default)\r\n\t\tautoresize       : PropTypes.bool.isRequired,\r\n\r\n\t\t// Set to `false` to prevent the `<label/>` from floating\r\n\t\tfloatingLabel    : PropTypes.bool.isRequired,\r\n\r\n\t\t// A custom input component.\r\n\t\t// (is `<input/>` by default)\r\n\t\tinputComponent   : PropTypes.oneOfType\r\n\t\t([\r\n\t\t\tPropTypes.func,\r\n\t\t\tPropTypes.string\r\n\t\t])\r\n\t\t.isRequired\r\n\t}\r\n\r\n\tstatic defaultProps =\r\n\t{\r\n\t\t// `<textarea/>` should autoresize itself\r\n\t\tautoresize : true,\r\n\r\n\t\t// Set to `false` to prevent the `<label/>` from floating\r\n\t\tfloatingLabel : true,\r\n\r\n\t\t// A custom input component.\r\n\t\t// (is `<input/>` by default)\r\n\t\tinputComponent : 'input'\r\n\t}\r\n\r\n\t// Client side rendering, javascript is enabled\r\n\tcomponentDidMount()\r\n\t{\r\n\t\tconst { multiline, autoresize, value } = this.props\r\n\r\n\t\t// Doing `this.measure()` here now\r\n\t\t// because `<textarea/>` should autoresize\r\n\t\t// in case its `value` is set up front.\r\n\t\t// // Not doing `this.measure()` here because\r\n\t\t// // that resulted in weird `<textarea/>` height mismatch.\r\n\t\t// // Measuring the height of `<textarea/>` during\r\n\t\t// // the first `this.measurements()` call instead.\r\n\r\n\t\tif (multiline && autoresize && value) {\r\n\t\t\tthis.autoresize()\r\n\t\t}\r\n\r\n\t\tif (multiline && autoresize) {\r\n\t\t\twindow.addEventListener('resize', this.onWindowResize)\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount()\r\n\t{\r\n\t\tconst { multiline, autoresize } = this.props\r\n\r\n\t\tif (multiline && autoresize) {\r\n\t\t\twindow.removeEventListener('resize', this.onWindowResize)\r\n\t\t}\r\n\t}\r\n\r\n\tautoresize = (event) =>\r\n\t{\r\n\t\tconst measurements = this.measurements()\r\n\t\tconst element = event ? event.target : this.input\r\n\r\n\t\telement.style.height = 0\r\n\r\n\t\t// `element.scrollHeight` is always an integer\r\n\t\t// so it doesn't need rounding (e.g. `em`s).\r\n\t\tlet height = element.scrollHeight + measurements.extra_height\r\n\t\theight = Math.max(height, measurements.initial_height)\r\n\r\n\t\tif (getModularGridUnit() && height % getModularGridUnit())\r\n\t\t{\r\n\t\t\theight = Math.ceil(height / getModularGridUnit()) * getModularGridUnit()\r\n\t\t}\r\n\r\n\t\t// For some reason Chrome on Windows 10\r\n\t\t// requires an extra pixel been added\r\n\t\t// to avoid showing vertical scrollbar.\r\n\t\t// (Jan 11, 2018)\r\n\t\tif (height > measurements.initial_height)\r\n\t\t{\r\n\t\t\theight += 1\r\n\t\t}\r\n\r\n\t\telement.style.height = height + 'px'\r\n\t}\r\n\r\n\tonWindowResize = throttle((event) => this.autoresize(), 100)\r\n\r\n\tmeasure = () => autoresize_measure(this.input)\r\n\r\n\tmeasurements()\r\n\t{\r\n\t\tlet measurements = this.state.autoresize\r\n\r\n\t\t// If it's the first time accessing measurements,\r\n\t\t// or if the textarea was initially hidden\r\n\t\t// (like `display: none` for a mobile-oriented responsive design)\r\n\t\t// then make the initial measurements now.\r\n\t\tif (!measurements || !measurements.initial_height)\r\n\t\t{\r\n\t\t\tmeasurements = this.measure()\r\n\r\n\t\t\t// If the `<textarea/>` is not hidden (e.g. via `display: none`)\r\n\t\t\t// then keep its initial (minimum) height\r\n\t\t\t// so that it doesn't shrink below this value\r\n\t\t\tif (measurements.initial_height) {\r\n\t\t\t\tthis.setState({ autoresize: measurements })\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn measurements\r\n\t}\r\n\r\n\t// The underlying `input` component\r\n\t// can pass both `event`s and `value`s\r\n\t// to this parent `onChange` listener.\r\n\tonChange = (event) =>\r\n\t{\r\n\t\t// Extract `value` from the argument\r\n\t\t// of this `onChange` listener\r\n\t\t// (for convenience)\r\n\r\n\t\tlet value = event\r\n\r\n\t\tif (event.target !== undefined) {\r\n\t\t\tvalue = event.target.value\r\n\t\t}\r\n\r\n\t\t// Call the parent `onChange` handler\r\n\t\t// with the `value` as an argument\r\n\t\t// (for convenience)\r\n\r\n\t\tconst { onChange } = this.props\r\n\r\n\t\t// Call `onChange` only if `value` did actually change\r\n\t\tif (value !== this.props.value) {\r\n\t\t\tonChange(value)\r\n\t\t}\r\n\t}\r\n\r\n\tonKeyDown = (event) =>\r\n\t{\r\n\t\tconst { onKeyDown } = this.props\r\n\r\n\t\tif (onKeyDown) {\r\n\t\t\tonKeyDown(event)\r\n\t\t}\r\n\r\n\t\tif (event.defaultPrevented) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (submitFormOnCtrlEnter(event, this.input)) {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\r\n\tstoreInputNode = (node) =>\r\n\t{\r\n\t\tconst { inputRef } = this.props\r\n\r\n\t\tif (inputRef) {\r\n\t\t\tinputRef(node)\r\n\t\t}\r\n\r\n\t\tthis.input = node\r\n\t}\r\n\r\n\tfocus = () => this.input.focus()\r\n\r\n\trender()\r\n\t{\r\n\t\tconst\r\n\t\t{\r\n\t\t\tname,\r\n\t\t\tvalue,\r\n\t\t\tmultiline,\r\n\t\t\tinputComponent,\r\n\t\t\tfocus,\r\n\t\t\tonChange,\r\n\t\t\tdisabled,\r\n\t\t\ttype,\r\n\t\t\tautoresize,\r\n\t\t\tindicateInvalid,\r\n\t\t\terror,\r\n\t\t\tclassName,\r\n\r\n\t\t\t// Rest\r\n\t\t\tinputRef,\r\n\t\t\tcontainerRef,\r\n\t\t\tfloatingLabel,\r\n\t\t\trequired,\r\n\t\t\tchildren,\r\n\t\t\t...rest\r\n\t\t}\r\n\t\t= this.props\r\n\r\n\t\tlet { inputStyle } = this.props\r\n\r\n\t\tif (multiline && autoresize)\r\n\t\t{\r\n\t\t\tinputStyle =\r\n\t\t\t{\r\n\t\t\t\tresize : 'none',\r\n\t\t\t\t...inputStyle\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst properties =\r\n\t\t{\r\n\t\t\t...rest,\r\n\t\t\tname        : name === false ? undefined : name,\r\n\t\t\tref         : this.storeInputNode,\r\n\t\t\tvalue       : (value === undefined || value === null) ? '' : value,\r\n\t\t\tdisabled,\r\n\t\t\tonChange    : this.onChange,\r\n\t\t\tonKeyDown   : this.onKeyDown,\r\n\t\t\tclassName   : classNames\r\n\t\t\t(\r\n\t\t\t\t'rrui__input-element',\r\n\t\t\t\t'rrui__input-field',\r\n\t\t\t\t{\r\n\t\t\t\t\t// CSS selector performance optimization\r\n\t\t\t\t\t'rrui__input-field--invalid'   : indicateInvalid && error,\r\n\t\t\t\t\t'rrui__input-field--disabled'  : disabled,\r\n\t\t\t\t\t'rrui__input-field--multiline' : multiline\r\n\t\t\t\t},\r\n\t\t\t\tclassName\r\n\t\t\t),\r\n\t\t\tstyle       : inputStyle,\r\n\t\t\tautoFocus   : focus\r\n\t\t}\r\n\r\n\t\t// In case of `multiline` set to `true`\r\n\t\t// this is gonna be a `<textarea/>`\r\n\t\tif (multiline)\r\n\t\t{\r\n\t\t\t// \"keyup\" is required for IE to properly reset height when deleting text\r\n\t\t\treturn (\r\n\t\t\t\t<textarea\r\n\t\t\t\t\t{ ...properties }\r\n\t\t\t\t\tonInput={ autoresize ? this.autoresize : undefined }\r\n\t\t\t\t\tonKeyUp={ autoresize ? this.autoresize : undefined }/>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t// Add `<input/>` `type` property.\r\n\t\tif (inputComponent === 'input') {\r\n\t\t\tproperties.type = type || 'text'\r\n\t\t}\r\n\r\n\t\treturn React.createElement(inputComponent, properties)\r\n\t}\r\n}\r\n\r\n// <textarea/> autoresize (without ghost elements)\r\n// https://github.com/javierjulio/textarea-autosize/blob/master/src/jquery.textarea_autosize.js\r\nfunction autoresize_measure(element)\r\n{\r\n\tconst style = getComputedStyle(element)\r\n\r\n\t// Borders extra height, because `.scrollHeight` doesn't include borders.\r\n\tconst extra_height =\r\n\t\tparseInt(style.borderTopWidth) +\r\n\t\tparseInt(style.borderBottomWidth)\r\n\r\n\t// `<textarea/>`'s height is a float when using `em`, `rem`, `pt`, etc.\r\n\tconst non_rounded_initial_height = element.getBoundingClientRect().height\r\n\tconst initial_height = Math.ceil(non_rounded_initial_height)\r\n\r\n\t// Round the height of `<textarea/>` so that it doesn't jump\r\n\t// when autoresizing while typing for the first time.\r\n\tif (initial_height !== non_rounded_initial_height)\r\n\t{\r\n\t\telement.style.height = initial_height + 'px'\r\n\t}\r\n\r\n\treturn { extra_height, initial_height }\r\n}"]}