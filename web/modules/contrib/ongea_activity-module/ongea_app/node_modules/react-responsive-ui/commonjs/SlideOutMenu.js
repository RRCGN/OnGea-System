'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp2;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _PageAndMenu = require('./PageAndMenu');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// `PureComponent` is only available in React >= 15.3.0.
var PureComponent = _react2.default.PureComponent || _react2.default.Component;

var ContextAwareSlideoutMenu = function ContextAwareSlideoutMenu(props) {
	return _react2.default.createElement(
		_PageAndMenu.Context.Consumer,
		null,
		function (context) {
			return _react2.default.createElement(SlideoutMenu, _extends({}, props, {
				registerMenu: context.registerMenu,
				toggleMenu: context.toggleMenu }));
		}
	);
};

exports.default = ContextAwareSlideoutMenu;

// Swipeable feature example source code:
// https://github.com/mui-org/material-ui/blob/v1-beta/packages/material-ui/src/SwipeableDrawer/SwipeableDrawer.js

// A slideout menu.

var SlideoutMenu = (_temp2 = _class = function (_PureComponent) {
	_inherits(SlideoutMenu, _PureComponent);

	function SlideoutMenu() {
		var _ref;

		var _temp, _this, _ret;

		_classCallCheck(this, SlideoutMenu);

		for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
			args[_key] = arguments[_key];
		}

		return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SlideoutMenu.__proto__ || Object.getPrototypeOf(SlideoutMenu)).call.apply(_ref, [this].concat(args))), _this), _this.state = { show: false }, _this.hide = function () {
			var toggleMenu = _this.props.toggleMenu;
			var show = _this.state.show;


			if (show) {
				toggleMenu();
			}
		}, _this.storeInstance = function (ref) {
			return _this.menu = ref;
		}, _temp), _possibleConstructorReturn(_this, _ret);
	}

	_createClass(SlideoutMenu, [{
		key: 'componentDidMount',
		value: function componentDidMount() {
			var _this2 = this;

			var registerMenu = this.props.registerMenu;
			var show = this.state.show;


			this.unregister = registerMenu({
				hide: function hide() {
					return _this2.setState({ show: false });
				},
				toggle: function toggle(callback) {
					return _this2.setState(function (state) {
						return { show: !state.show };
					}, callback);
				},
				isShown: function isShown() {
					return _this2.state.show;
				},
				element: function element() {
					return _this2.menu;
				}
			});

			// Listen to `pushstate` and `popstate` events (navigation).
			window.addEventListener('pushstate', this.hide);
			window.addEventListener('popstate', this.hide);
		}
	}, {
		key: 'componentWillUnmount',
		value: function componentWillUnmount() {
			this.unregister();

			// Stop listening to `pushstate` and `popstate` events (navigation).
			window.removeEventListener('pushstate', this.hide);
			window.removeEventListener('popstate', this.hide);
		}
	}, {
		key: 'render',
		value: function render() {
			var _props = this.props,
			    className = _props.className,
			    style = _props.style,
			    children = _props.children;
			var show = this.state.show;


			return _react2.default.createElement(
				'div',
				{
					ref: this.storeInstance,
					className: (0, _classnames2.default)('rrui__slideout-menu', {
						'rrui__slideout-menu--expanded': show
					}, className),
					style: style },
				children
			);
		}
	}]);

	return SlideoutMenu;
}(PureComponent), _class.propTypes = {
	toggleMenu: _propTypes2.default.func.isRequired,
	registerMenu: _propTypes2.default.func.isRequired,

	// CSS style object
	style: _propTypes2.default.object,

	// CSS class
	className: _propTypes2.default.string
}, _temp2);
//# sourceMappingURL=SlideOutMenu.js.map